Exception Handling -
                    #include <stdexcept> - stdexcept(standard exception) defines a set of exceptions that both library and programs used to report common errors in C++
                    #include <exception> - exception define a base class std::exception for all exception in C++
                    
                    try {
                        // Some Code
                    }
                    catch(exception_name object_of_exception_for_reference)
                    catch(out_of_range &e)
                    {
                        // `e` can be any name
                        // what() gives the technical error message of the exception
                        // we can give custom message in place of it
                        cout << e.what() << endl;
                        cour << "Out of Range" << endl;
                    }

                    throw exception_name("Message");
                    throw out_of_range("ERROR); -----> Manually throw an error via coder

                    if we don't know about the exception which is going to be thown then we can use `...` in place of object
                    catch(...)
                    {
                        
                    }

                    There must be one try {     } but can be multiple catch {   }
                    try
                    {
                        throw "Some Exception";
                        throw 10;
                        throw runtime_error("RUNTIME ERROR");
                    }
                    catch (const char *c)
                    {
                        cout << "Exception Occurred String : " << c << endl;
                    }
                    catch (int i)
                    {
                        cout << "Exception Occurred Integer : " << i << endl;
                    }
                    catch (runtime_error &e)
                    {
                        cout << "Exception Occurred Runtime : " << e.what() << endl;
                    }